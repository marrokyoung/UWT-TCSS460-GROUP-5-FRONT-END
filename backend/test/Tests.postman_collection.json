{
	"info": {
		"_postman_id": "62b1ad1b-0793-4bd2-87b7-1c85ba2cb5b2",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31288421"
	},
	"item": [
		{
			"name": "Delete by ISBN, exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains deleted entry message\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('entry');\r",
							"    pm.expect(jsonData.entry).to.include('Deleted:');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/9780812972350",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"9780812972350"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete by ISBN, does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'isbn13 not found'\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message', 'isbn13 not found');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/delete_by_isbn?isbn=0000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"delete_by_isbn"
					],
					"query": [
						{
							"key": "isbn",
							"value": "0000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by title (title exists)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Response status should be 200\", () => {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Body has the field entry\", () => {",
							"    pm.expect(response).to.haveOwnProperty(\"entry\");",
							"    pm.expect(response.entry).to.equal",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const good_title = \"The Hunger Games\";\r",
							"const bad_title = \"a1234asdkfjgha;eushfnsd\"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/get_by_title?title=The Hunger Games",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"get_by_title"
					],
					"query": [
						{
							"key": "title",
							"value": "The Hunger Games"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get by title (title doesnt exist)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'Title not found'\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message', 'Title not found');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:4000/books/get_by_title?title=title_not_exist",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"books",
						"get_by_title"
					],
					"query": [
						{
							"key": "title",
							"value": "title_not_exist"
						}
					]
				}
			},
			"response": []
		}
	]
}